{"version":3,"sources":["BurgerBuilder.js"],"names":["INGREDIENT_PRICES","salad","cheese","meat","bacon","BurgerBuilder","Component","state","ingredients","totalPrice","purchasable","purchasing","updatePurchaseState","sum","Object","keys","map","igKey","reduce","el","setState","addIngredientHandler","type","oldCount","updatedCount","updatedIngredients","priceAddition","oldPrice","newPrice","removeIngredientHandler","priceDeduction","purchaseHandler","purchaseCancelHandler","purchaseContinueHandler","alert","render","disabledInfo","key"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\n\n\nconst INGREDIENT_PRICES = {\n    salad: 0.5,\n    cheese: 0.4,\n    meat: 1.3,\n    bacon: 0.7,\n};\n\n\n\nclass BurgerBuilder extends Component{\n\n    state = {\n        ingredients: {\n            salad: 0,\n            bacon: 0,\n            cheese: 0,\n            meat: 0\n        },\n        totalPrice: 4,\n        purchasable: false,\n        purchasing: false\n    }\n\n    updatePurchaseState = (ingredients) => {\n        const sum = Object.keys(ingredients)\n        .map(igKey => {\n            return ingredients[igKey]\n        })\n        .reduce((sum, el) => {\n            return sum + el;\n        }, 0);\n        this.setState({purchasable: sum > 0})\n    }\n\n\n    addIngredientHandler = (type) => {\n        const oldCount = this.state.ingredients[type];\n        const updatedCount = oldCount + 1;\n        const updatedIngredients = {\n            ...this.state.ingredients\n        };\n        updatedIngredients[type] = updatedCount\n        const priceAddition = INGREDIENT_PRICES[type]\n        const oldPrice = this.state.totalPrice;\n        const newPrice = oldPrice + priceAddition;\n        this.setState({totalPrice: newPrice, ingredients: updatedIngredients});\n        this.updatePurchaseState(updatedIngredients);\n  \n    }\n\n    removeIngredientHandler = (type) => {\n        const oldCount = this.state.ingredients[type];\n        if (oldCount <= 0){\n            return;\n        }\n        const updatedCount = oldCount - 1;\n        const updatedIngredients = {\n            ...this.state.ingredients\n        };\n        updatedIngredients[type] = updatedCount\n        const priceDeduction = INGREDIENT_PRICES[type]\n        const oldPrice = this.state.totalPrice;\n        const newPrice = oldPrice - priceDeduction;\n        this.setState({totalPrice: newPrice, ingredients: updatedIngredients});\n        this.updatePurchaseState(updatedIngredients);\n    }\n\n    purchaseHandler = () => {\n        this.setState({purchasing: true});\n    }\n\n    purchaseCancelHandler = () => {\n        this.setState({purchasing: false});\n    }\n\n    purchaseContinueHandler = () => {\n        alert('You Continue!');\n    }\n\n    render(){\n\n        const disabledInfo = {\n            ...this.state.ingredients\n        };\n        for(let key in disabledInfo){\n            disabledInfo[key] = disabledInfo[key] <= 0;\n        }\n\n        return(\n            <React.Fragment>\n                <Modal show={this.state.purchasing} modalClosed={this.purchaseCancelHandler}>\n                    <OrderSummary \n                    totalPrice = {this.state.totalPrice}\n                    purchaseCancelled={this.purchaseCancelHandler}\n                    purchaseContinued={this.purchaseContinueHandler}\n                    ingredients={this.state.ingredients} />\n                </Modal>\n                <Burger ingredients ={this.state.ingredients}/>\n                <BuildControls\n                    ingredientRemove={this.removeIngredientHandler}\n                    ingredientAdded={this.addIngredientHandler}\n                    disabled={disabledInfo}\n                    price={this.state.totalPrice}\n                    purchasable = {this.state.purchasable}\n                    order={this.purchaseHandler}/>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default BurgerBuilder;"]}